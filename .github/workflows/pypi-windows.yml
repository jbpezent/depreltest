name: pypi-windows


on:
  workflow_dispatch:

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19078/w_BaseKit_p_2023.0.0.25940_offline.exe
  
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.mkl.devel
  VS_VER: vs2022
  ONEAPI_ROOT: C:/Program Files (x86)/Intel/oneAPI/
  CC: clang-cl.exe
  CXX: clang-cl.exe


jobs:
 build:
    strategy:
       fail-fast: false
       matrix:
        platform: [windows-latest]
        python-version: ["3.8","3.10"]
        compiler: ["clang-cl"]

    runs-on: ${{ matrix.platform }}

    steps:

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15.0"
      
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_64

      - name: Install MKL
        run: scripts/windowsoneapi_install.bat $WINDOWS_BASEKIT_URL $WINDOWS_CPP_COMPONENTS
        shell: bash

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Add python requirements
        run: python -m pip install --upgrade wheel setuptools && python -m pip install -r requirements.txt

      - name: "Create build directory and run CMake"
        run: > 
         cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DPIP_INSTALL=True 
         -DCMAKE_C_COMPILER:FILEPATH="C:/Program Files/LLVM/bin/clang-cl.exe" 
         -DCMAKE_CXX_COMPILER:FILEPATH="C:/Program Files/LLVM/bin/clang-cl.exe" 
         -DCMAKE_LINKER:FILEPATH="C:/Program Files/LLVM/bin/lld-link.exe" 
      
      - name: "Build Project" 
        run: cmake --build build --target _depreltest pypiwheel --config Release

      - name: 'Upload Test'
        uses: actions/upload-artifact@v3
        with:
          name: dist_${{ matrix.python-version }}
          path: build/pypiwheel/depreltest/dist/*.whl
          retention-days: 1

 upload:
    needs: build
    strategy:
       fail-fast: false
       matrix:
        platform: [ubuntu-latest]
        python-version: ["3.9"]
        compiler: ["clang-13"]
    runs-on: ${{ matrix.platform }}

    steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
      
        
        - uses: actions/download-artifact@v3
          with:
              path: dists/

        - run: mkdir wheels

        - name: Copy to Target
          run: cp -r dists/dist_*/. wheels/

        - name: Display structure of downloaded files
          run: ls -R
          working-directory:  wheels/

        #- name: Publish package to TestPyPI
        #  uses: pypa/gh-action-pypi-publish@release/v1
        #  with:
        #    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        #    repository_url: https://test.pypi.org/legacy/
         #   packages_dir: wheels/