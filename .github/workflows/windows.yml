name: windows

on:
  workflow_dispatch:
  push:
    branches:
     - main



env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19078/w_BaseKit_p_2023.0.0.25940_offline.exe
  
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.mkl.devel
 
  CACHE_NUMBER: 5
  SAMPLES_TAG: 2023.0.0
  COMPILER_VERSION: 2023.0.0
  TBB_VERSION: 2021.8.0
  VS_VER: vs2022
  ONEAPI_ROOT: C:/Program Files (x86)/Intel/oneAPI/
  CC: clang-cl.exe
  CXX: clang-cl.exe

  v1: -DCMAKE_BUILD_TYPE=Release 
  v2: -DPIP_INSTALL=True 
  v3: -DBUILD_SPHINX_DOCS=True 
  v4: -DCMAKE_C_COMPILER:FILEPATH="C:/Program Files /Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/clang-cl.exe"
  v6: -DCMAKE_CXX_COMPILER:FILEPATH="C:/Program Files /Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/clang-cl.exe"
  v7: -DCMAKE_LINKER:FILEPATH="C:/Program Files /Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/lld-link.exe" 
  v8: '-DCMAKE_CXX_COMPILER_RANLIB=C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/llvm-ranlib.exe' 
  v9: '-DCMAKE_CXX_COMPILER_AR=C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/llvm-ar.exe'
  v10: '-DCMAKE_C_COMPILER_RANLIB=C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/llvm-ranlib.exe'
  v11: '-DCMAKE_C_COMPILER_AR=C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Tools/Llvm/bin/llvm-ar.exe'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        python-version: ["3.9"]
        compiler: ["clang-cl"]

    runs-on: ${{ matrix.platform }}
    #defaults:
    #  run:
    #    shell: bash
    steps:

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
         version: "14.0"
      
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
      #- name: install mkl
      #  run: scripts/windowsoneapi_install.bat $WINDOWS_BASEKIT_URL $WINDOWS_CPP_COMPONENTS

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      #- name: Add python requirements
      #  run: python -m pip install --upgrade wheel setuptools && python -m pip install -r requirements.txt

      - name: "Create build directory and run CMake"
        
        #run: cmake -S . -B build -G "Visual Studio 17 2022" -T "ClangCl" -DCMAKE_BUILD_TYPE=Release -DPIP_INSTALL=True
        run: cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DPIP_INSTALL=True -DCMAKE_C_COMPILER:FILEPATH="C:/Program Files/LLVM/bin/clang-cl.exe" -DCMAKE_CXX_COMPILER:FILEPATH="C:/Program Files/LLVM/bin/clang-cl.exe" -DCMAKE_LINKER:FILEPATH="C:/Program Files/LLVM/bin/lld-link.exe" 
      
      - name: "Build Project" 
        run: cmake --build build --target _depreltest pypiwheel --config Release 
      
